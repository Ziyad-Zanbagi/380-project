/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import cpit380practice.Picture;
import cpit380practice.Pixel;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Ziyad
 */
public class project380 extends javax.swing.JFrame {

    /**
     * Creates new form project380
     */
    Picture inputImage = null;
    Picture resetImage = null;
    ImageIcon icon = null;
    String fileName = null;
    Graphics g = null;

    public project380() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        panel_picture = new javax.swing.JPanel();
        panel_target = new javax.swing.JPanel();
        resultImage = new javax.swing.JLabel();
        panel_original = new javax.swing.JPanel();
        original_image = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        panelColors = new javax.swing.JPanel();
        redSlider = new javax.swing.JSlider();
        redCheckbox = new java.awt.Checkbox();
        greenCheckbox = new java.awt.Checkbox();
        greenSlider = new javax.swing.JSlider();
        blueSlider = new javax.swing.JSlider();
        blueCheckbox = new java.awt.Checkbox();
        applyColors = new java.awt.Button();
        resetButton = new java.awt.Button();
        panelColors2 = new javax.swing.JPanel();
        scaleSlider = new javax.swing.JSlider();
        scaleText = new javax.swing.JLabel();
        scaleText1 = new javax.swing.JLabel();
        scaleSlider1 = new javax.swing.JSlider();
        picture_histogram = new java.awt.Button();
        picture_grayscale = new java.awt.Button();
        picture_browse = new java.awt.Button();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_reflection = new javax.swing.JPanel();
        picture_horizontalReflection = new java.awt.Button();
        picture_diagonalReflection1 = new java.awt.Button();
        picture_diagonalReflection = new java.awt.Button();
        picture_verticalReflection = new java.awt.Button();
        panel_rotation = new javax.swing.JPanel();
        picture_rotateLeft = new java.awt.Button();
        picture_rotateRight = new java.awt.Button();
        panel_Filters = new javax.swing.JPanel();
        panel_computations = new javax.swing.JPanel();
        panel_conversions = new javax.swing.JPanel();
        panel_sounds = new javax.swing.JPanel();
        panel_movies = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_picture.setPreferredSize(new java.awt.Dimension(1048, 660));

        panel_target.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel_target.setPreferredSize(new java.awt.Dimension(340, 300));

        resultImage.setText("                                                 Image unavailable");

        javax.swing.GroupLayout panel_targetLayout = new javax.swing.GroupLayout(panel_target);
        panel_target.setLayout(panel_targetLayout);
        panel_targetLayout.setHorizontalGroup(
            panel_targetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_targetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_targetLayout.setVerticalGroup(
            panel_targetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_targetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel_original.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel_original.setPreferredSize(new java.awt.Dimension(340, 300));

        original_image.setText("                                                Image unavailable");
        original_image.setToolTipText("");

        javax.swing.GroupLayout panel_originalLayout = new javax.swing.GroupLayout(panel_original);
        panel_original.setLayout(panel_originalLayout);
        panel_originalLayout.setHorizontalGroup(
            panel_originalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_originalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(original_image, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_originalLayout.setVerticalGroup(
            panel_originalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_originalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(original_image, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        label1.setText("Original Image");

        label2.setText("Resulting image");

        panelColors.setBackground(new java.awt.Color(204, 204, 204));

        redCheckbox.setLabel("Red");

        greenCheckbox.setLabel("Green");

        blueSlider.setToolTipText("");

        blueCheckbox.setLabel("Blue");

        applyColors.setLabel("Apply");
        applyColors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyColorsActionPerformed(evt);
            }
        });

        resetButton.setLabel("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelColorsLayout = new javax.swing.GroupLayout(panelColors);
        panelColors.setLayout(panelColorsLayout);
        panelColorsLayout.setHorizontalGroup(
            panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelColorsLayout.createSequentialGroup()
                .addGroup(panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelColorsLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(redCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(greenCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blueCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(blueSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(redSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(greenSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelColorsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyColors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(486, 486, 486))
        );
        panelColorsLayout.setVerticalGroup(
            panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColorsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelColorsLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(redSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(greenSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(blueSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelColorsLayout.createSequentialGroup()
                        .addComponent(redCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(greenCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blueCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(panelColorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(applyColors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelColors2.setBackground(new java.awt.Color(204, 204, 204));

        scaleText.setForeground(new java.awt.Color(51, 55, 55));
        scaleText.setText("Scale");

        scaleText1.setForeground(new java.awt.Color(51, 55, 55));
        scaleText1.setText("Contrast");

        picture_histogram.setLabel("Histogram");
        picture_histogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_histogramActionPerformed(evt);
            }
        });

        picture_grayscale.setLabel("Grayscale");
        picture_grayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_grayscaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelColors2Layout = new javax.swing.GroupLayout(panelColors2);
        panelColors2.setLayout(panelColors2Layout);
        panelColors2Layout.setHorizontalGroup(
            panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelColors2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scaleText1)
                    .addComponent(scaleText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelColors2Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(picture_grayscale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(picture_histogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(scaleSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(scaleSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        panelColors2Layout.setVerticalGroup(
            panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColors2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scaleText)
                    .addComponent(scaleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scaleSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scaleText1))
                .addGap(25, 25, 25)
                .addGroup(panelColors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(picture_histogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(picture_grayscale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        picture_browse.setActionCommand("browseFile");
        picture_browse.setLabel("Browse");
        picture_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_browseActionPerformed(evt);
            }
        });

        panel_reflection.setBackground(new java.awt.Color(204, 204, 204));
        panel_reflection.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        picture_horizontalReflection.setLabel("Horizontal Reflection");
        picture_horizontalReflection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_horizontalReflectionActionPerformed(evt);
            }
        });

        picture_diagonalReflection1.setLabel("Diagonal Reflection");
        picture_diagonalReflection1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_diagonalReflection1ActionPerformed(evt);
            }
        });

        picture_diagonalReflection.setLabel("Diagonal Reflection");
        picture_diagonalReflection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_diagonalReflectionActionPerformed(evt);
            }
        });

        picture_verticalReflection.setLabel("Vertical Reflection");
        picture_verticalReflection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_verticalReflectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_reflectionLayout = new javax.swing.GroupLayout(panel_reflection);
        panel_reflection.setLayout(panel_reflectionLayout);
        panel_reflectionLayout.setHorizontalGroup(
            panel_reflectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_reflectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_reflectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_reflectionLayout.createSequentialGroup()
                        .addComponent(picture_verticalReflection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(picture_diagonalReflection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_reflectionLayout.createSequentialGroup()
                        .addComponent(picture_horizontalReflection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(picture_diagonalReflection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );
        panel_reflectionLayout.setVerticalGroup(
            panel_reflectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_reflectionLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(panel_reflectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(picture_diagonalReflection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(picture_horizontalReflection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(panel_reflectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(picture_diagonalReflection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(picture_verticalReflection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(333, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reflection", panel_reflection);

        panel_rotation.setBackground(new java.awt.Color(204, 204, 204));
        panel_rotation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        picture_rotateLeft.setLabel("Rotate Left");
        picture_rotateLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_rotateLeftActionPerformed(evt);
            }
        });

        picture_rotateRight.setLabel("Rotate Right");
        picture_rotateRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_rotateRightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_rotationLayout = new javax.swing.GroupLayout(panel_rotation);
        panel_rotation.setLayout(panel_rotationLayout);
        panel_rotationLayout.setHorizontalGroup(
            panel_rotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_rotationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture_rotateLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(picture_rotateRight, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        panel_rotationLayout.setVerticalGroup(
            panel_rotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_rotationLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(panel_rotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(picture_rotateRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(picture_rotateLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(356, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Rotation", panel_rotation);

        panel_Filters.setBackground(new java.awt.Color(204, 204, 204));
        panel_Filters.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panel_FiltersLayout = new javax.swing.GroupLayout(panel_Filters);
        panel_Filters.setLayout(panel_FiltersLayout);
        panel_FiltersLayout.setHorizontalGroup(
            panel_FiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        panel_FiltersLayout.setVerticalGroup(
            panel_FiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Filters", panel_Filters);

        panel_computations.setBackground(new java.awt.Color(204, 204, 204));
        panel_computations.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panel_computationsLayout = new javax.swing.GroupLayout(panel_computations);
        panel_computations.setLayout(panel_computationsLayout);
        panel_computationsLayout.setHorizontalGroup(
            panel_computationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        panel_computationsLayout.setVerticalGroup(
            panel_computationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Compute", panel_computations);

        panel_conversions.setBackground(new java.awt.Color(204, 204, 204));
        panel_conversions.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panel_conversionsLayout = new javax.swing.GroupLayout(panel_conversions);
        panel_conversions.setLayout(panel_conversionsLayout);
        panel_conversionsLayout.setHorizontalGroup(
            panel_conversionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        panel_conversionsLayout.setVerticalGroup(
            panel_conversionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Conversion", panel_conversions);

        javax.swing.GroupLayout panel_pictureLayout = new javax.swing.GroupLayout(panel_picture);
        panel_picture.setLayout(panel_pictureLayout);
        panel_pictureLayout.setHorizontalGroup(
            panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_pictureLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_pictureLayout.createSequentialGroup()
                        .addComponent(picture_browse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177))
                    .addGroup(panel_pictureLayout.createSequentialGroup()
                        .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panel_original, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(panelColors, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panel_target, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(panelColors2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        panel_pictureLayout.setVerticalGroup(
            panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_pictureLayout.createSequentialGroup()
                .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_pictureLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(picture_browse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panel_original, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(panel_target, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_pictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelColors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelColors2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panel_pictureLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        label2.getAccessibleContext().setAccessibleName("Resulting image");
        picture_browse.getAccessibleContext().setAccessibleName("browseFile");

        jTabbedPane2.addTab("Picture", panel_picture);
        panel_picture.getAccessibleContext().setAccessibleName("Picture");

        javax.swing.GroupLayout panel_soundsLayout = new javax.swing.GroupLayout(panel_sounds);
        panel_sounds.setLayout(panel_soundsLayout);
        panel_soundsLayout.setHorizontalGroup(
            panel_soundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1218, Short.MAX_VALUE)
        );
        panel_soundsLayout.setVerticalGroup(
            panel_soundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 685, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Sound", panel_sounds);

        javax.swing.GroupLayout panel_moviesLayout = new javax.swing.GroupLayout(panel_movies);
        panel_movies.setLayout(panel_moviesLayout);
        panel_moviesLayout.setHorizontalGroup(
            panel_moviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1218, Short.MAX_VALUE)
        );
        panel_moviesLayout.setVerticalGroup(
            panel_moviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 685, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Movies", panel_movies);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2))
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("Picture");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void picture_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_browseActionPerformed
        try {
            fileName = cpit380practice.FileChooser.pickAFile();
            inputImage = new Picture(fileName);
            resetImage = new Picture(fileName);

            icon = new ImageIcon(inputImage.getImage());
            //jLabel1_ImageDisplay.setPreferredSize(null);
            resultImage.setIcon(icon);
            original_image.setIcon(icon);
            resultImage.setText("");
            original_image.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select the image", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_picture_browseActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        try {
            //inputImage.copy(resetImage, 0, 0, resetImage.getWidth()-1, resetImage.getHeight()-1, 0, 0);
            inputImage = new Picture(fileName);
            icon = new ImageIcon(inputImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select the image first", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_resetButtonActionPerformed

    private void applyColorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyColorsActionPerformed
        try {
            Pixel[] pixelArray = inputImage.getPixels();
            for (int i = 0; i < pixelArray.length; i++) {

                if (redCheckbox.getState() == true) {
                    //check if pixel is 0 in value, then we change if the slider is
                    //different to accomodate change
//                if(pixelArray[i].getRed() == 0 && redSlider.getValue() != 0) {
//                    pixelArray[i].setRed(1);
//                }
                    pixelArray[i].setRed((int) (pixelArray[i].getRed() * (redSlider.getValue() / 50)));
                }
                if (blueCheckbox.getState() == true) {
//                if(pixelArray[i].getBlue() == 0 && blueSlider.getValue() != 0) {
//                    pixelArray[i].setBlue(1);
//                }
                    pixelArray[i].setBlue((int) (pixelArray[i].getBlue() * (blueSlider.getValue() / 50)));
                }
                if (greenCheckbox.getState() == true) {
//                if(pixelArray[i].getGreen() == 0 && greenSlider.getValue() != 0) {
//                    pixelArray[i].setGreen(1);
//                }
                    pixelArray[i].setGreen((int) (pixelArray[i].getGreen() * (greenSlider.getValue() / 50)));
                }
            }
            icon = new ImageIcon(inputImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_applyColorsActionPerformed

    private void picture_histogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_histogramActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picture_histogramActionPerformed

    private void picture_diagonalReflection1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_diagonalReflection1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picture_diagonalReflection1ActionPerformed

    private void picture_horizontalReflectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_horizontalReflectionActionPerformed
        // TODO add your handling code here:
        try {
            inputImage = inputImage.flip();
            icon = new ImageIcon(inputImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select an image", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_picture_horizontalReflectionActionPerformed

    private void picture_verticalReflectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_verticalReflectionActionPerformed
        // TODO add your handling code here:
        try {
            inputImage = inputImage.flipVertical();
            icon = new ImageIcon(inputImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select an image", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_picture_verticalReflectionActionPerformed

    private void picture_diagonalReflectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_diagonalReflectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picture_diagonalReflectionActionPerformed

    private void picture_rotateLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_rotateLeftActionPerformed
        try {
            inputImage = inputImage.rotateLeft();
            icon = new ImageIcon(inputImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select an image", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_picture_rotateLeftActionPerformed

    private void picture_rotateRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_rotateRightActionPerformed
        try {
            inputImage = inputImage.rotateRight();
            icon = new ImageIcon(inputImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select an image", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_picture_rotateRightActionPerformed

    private void picture_grayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_grayscaleActionPerformed
        try {
            Picture grayscaleImage = new Picture(inputImage);
            grayscaleImage.grayscale();
            icon = new ImageIcon(grayscaleImage.getImage());
            resultImage.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select an image", "Picture Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_picture_grayscaleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(project380.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(project380.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(project380.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(project380.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new project380().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button applyColors;
    private java.awt.Checkbox blueCheckbox;
    private javax.swing.JSlider blueSlider;
    private java.awt.Checkbox greenCheckbox;
    private javax.swing.JSlider greenSlider;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JLabel original_image;
    private javax.swing.JPanel panelColors;
    private javax.swing.JPanel panelColors2;
    private javax.swing.JPanel panel_Filters;
    private javax.swing.JPanel panel_computations;
    private javax.swing.JPanel panel_conversions;
    private javax.swing.JPanel panel_movies;
    private javax.swing.JPanel panel_original;
    private javax.swing.JPanel panel_picture;
    private javax.swing.JPanel panel_reflection;
    private javax.swing.JPanel panel_rotation;
    private javax.swing.JPanel panel_sounds;
    private javax.swing.JPanel panel_target;
    private java.awt.Button picture_browse;
    private java.awt.Button picture_diagonalReflection;
    private java.awt.Button picture_diagonalReflection1;
    private java.awt.Button picture_grayscale;
    private java.awt.Button picture_histogram;
    private java.awt.Button picture_horizontalReflection;
    private java.awt.Button picture_rotateLeft;
    private java.awt.Button picture_rotateRight;
    private java.awt.Button picture_verticalReflection;
    private java.awt.Checkbox redCheckbox;
    private javax.swing.JSlider redSlider;
    private java.awt.Button resetButton;
    private javax.swing.JLabel resultImage;
    private javax.swing.JSlider scaleSlider;
    private javax.swing.JSlider scaleSlider1;
    private javax.swing.JLabel scaleText;
    private javax.swing.JLabel scaleText1;
    // End of variables declaration//GEN-END:variables
}
