/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cpit380practice;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author 1537392
 */
public class color_int extends javax.swing.JFrame implements DigitalPicture {

    /**
     * Creates new form color_int
     */
    public color_int() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton_browse = new javax.swing.JButton();
        jTextField_path = new javax.swing.JTextField();
        jLabel_image = new javax.swing.JLabel();
        jCheckBox_red = new javax.swing.JCheckBox();
        jCheckBox_blue = new javax.swing.JCheckBox();
        jCheckBox_Green = new javax.swing.JCheckBox();
        jSlider_red = new javax.swing.JSlider();
        jSlider_blue = new javax.swing.JSlider();
        jSlider_green = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        Rotate180_B = new javax.swing.JButton();
        RotateRight90_B = new javax.swing.JButton();
        ScaleUp_B = new javax.swing.JButton();
        RotateLeft90_B1 = new javax.swing.JButton();
        ScaleDown_B1 = new javax.swing.JButton();
        Horizontal_B = new javax.swing.JButton();
        Verticall_B1 = new javax.swing.JButton();
        ReSet_B = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        collage_B = new javax.swing.JButton();
        Binary_B = new javax.swing.JButton();
        Blend_B = new javax.swing.JButton();
        Min = new javax.swing.JButton();
        Max = new javax.swing.JButton();
        Mid_M = new javax.swing.JButton();
        edge_E = new javax.swing.JButton();
        edgethreshhold = new javax.swing.JTextField();
        red_input = new javax.swing.JTextField();
        blue_input = new javax.swing.JTextField();
        green_input = new javax.swing.JTextField();
        change_R = new javax.swing.JButton();
        Change_b = new javax.swing.JButton();
        Change_g = new javax.swing.JButton();
        dioD1 = new javax.swing.JButton();
        diof2 = new javax.swing.JButton();
        brig = new javax.swing.JButton();
        bri = new javax.swing.JTextField();
        RightToBotLeft = new javax.swing.JButton();
        EdgeDetectMovie = new javax.swing.JButton();
        sunset = new javax.swing.JButton();
        swapBackground_d = new javax.swing.JButton();
        moveRectSinCos = new javax.swing.JToggleButton();
        TickerTapeMov = new javax.swing.JButton();
        SwapBackMovie = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        sX = new javax.swing.JTextField();
        eX = new javax.swing.JTextField();
        sY = new javax.swing.JTextField();
        eY = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        removeRedEye = new javax.swing.JButton();
        CropMovie = new javax.swing.JButton();
        scaling = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText("jTextField1");

        jScrollPane2.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_browse.setText("Browse");
        jButton_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_browseActionPerformed(evt);
            }
        });

        jCheckBox_red.setText("Red");
        jCheckBox_red.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_redActionPerformed(evt);
            }
        });

        jCheckBox_blue.setText("Blue");
        jCheckBox_blue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_blueActionPerformed(evt);
            }
        });

        jCheckBox_Green.setText("Green");
        jCheckBox_Green.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_GreenActionPerformed(evt);
            }
        });

        jSlider_red.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jSlider_red.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_redStateChanged(evt);
            }
        });

        jSlider_blue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        jSlider_blue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_blueStateChanged(evt);
            }
        });

        jSlider_green.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 0)));
        jSlider_green.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_greenStateChanged(evt);
            }
        });

        jButton1.setText("Gray Scale");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Rotate180_B.setText("Rotate 180");
        Rotate180_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rotate180_BActionPerformed(evt);
            }
        });

        RotateRight90_B.setText("Rotate Right");
        RotateRight90_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotateRight90_BActionPerformed(evt);
            }
        });

        ScaleUp_B.setText("Scale Up");
        ScaleUp_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScaleUp_BActionPerformed(evt);
            }
        });

        RotateLeft90_B1.setText("Rotate Left");
        RotateLeft90_B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotateLeft90_B1ActionPerformed(evt);
            }
        });

        ScaleDown_B1.setText("Scale Down");
        ScaleDown_B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScaleDown_B1ActionPerformed(evt);
            }
        });

        Horizontal_B.setText("HorizontalRef");
        Horizontal_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Horizontal_BActionPerformed(evt);
            }
        });

        Verticall_B1.setText("VerticalRef");
        Verticall_B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Verticall_B1ActionPerformed(evt);
            }
        });

        ReSet_B.setText("ReSet");
        ReSet_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReSet_BActionPerformed(evt);
            }
        });

        jButton2.setText("Crop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        collage_B.setText("Collage");
        collage_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collage_BActionPerformed(evt);
            }
        });

        Binary_B.setText("Binary");
        Binary_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Binary_BActionPerformed(evt);
            }
        });

        Blend_B.setText("Blend");
        Blend_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Blend_BActionPerformed(evt);
            }
        });

        Min.setText("Min");
        Min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinActionPerformed(evt);
            }
        });

        Max.setText("Max");
        Max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxActionPerformed(evt);
            }
        });

        Mid_M.setText("Mid");
        Mid_M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mid_MActionPerformed(evt);
            }
        });

        edge_E.setText("edge");
        edge_E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edge_EActionPerformed(evt);
            }
        });

        edgethreshhold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgethreshholdActionPerformed(evt);
            }
        });

        red_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                red_inputActionPerformed(evt);
            }
        });

        change_R.setText("Change");
        change_R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_RActionPerformed(evt);
            }
        });

        Change_b.setText("Change");
        Change_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_bActionPerformed(evt);
            }
        });

        Change_g.setText("Change");
        Change_g.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_gActionPerformed(evt);
            }
        });

        dioD1.setText("diagonal rf1");
        dioD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dioD1ActionPerformed(evt);
            }
        });

        diof2.setText("diagonal rf2");
        diof2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diof2ActionPerformed(evt);
            }
        });

        brig.setText("brightness");
        brig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brigActionPerformed(evt);
            }
        });

        bri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                briActionPerformed(evt);
            }
        });

        RightToBotLeft.setText("Blue recatangle");
        RightToBotLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightToBotLeftActionPerformed(evt);
            }
        });

        EdgeDetectMovie.setText("edge detection movie");
        EdgeDetectMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdgeDetectMovieActionPerformed(evt);
            }
        });

        sunset.setText("sunset");
        sunset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sunsetActionPerformed(evt);
            }
        });

        swapBackground_d.setText("swapBackground");
        swapBackground_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapBackground_dActionPerformed(evt);
            }
        });

        moveRectSinCos.setText("Move rectangle sinosoidal ");
        moveRectSinCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveRectSinCosActionPerformed(evt);
            }
        });

        TickerTapeMov.setText("TickerTapeMovie");
        TickerTapeMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TickerTapeMovActionPerformed(evt);
            }
        });

        SwapBackMovie.setText("BackGround Swap");
        SwapBackMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwapBackMovieActionPerformed(evt);
            }
        });

        jLabel1.setText("end x");

        jLabel2.setText("end y");

        jLabel3.setText("start x");

        jLabel4.setText("start y");

        removeRedEye.setText("removeRedEye");
        removeRedEye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRedEyeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(sX, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(sY, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eY, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(removeRedEye)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(removeRedEye)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CropMovie.setText("Crop Movie");
        CropMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CropMovieActionPerformed(evt);
            }
        });

        scaling.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                scalingStateChanged(evt);
            }
        });

        jLabel5.setText("+");

        jLabel6.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_browse, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_path, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(ReSet_B, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ScaleUp_B, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ScaleDown_B1))
                                    .addComponent(scaling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(93, 93, 93)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Rotate180_B, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(RotateLeft90_B1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(RotateRight90_B, javax.swing.GroupLayout.Alignment.TRAILING))
                                                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                                                    .addComponent(collage_B, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(Binary_B, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(edge_E, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(edgethreshhold, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(bri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(brig, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(Blend_B, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel_image, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TickerTapeMov)
                                            .addComponent(sunset)
                                            .addComponent(SwapBackMovie)
                                            .addComponent(CropMovie))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(RightToBotLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(EdgeDetectMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(moveRectSinCos))
                                                .addGap(321, 493, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(green_input, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(Change_g)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addComponent(jCheckBox_red))
                                            .addComponent(jSlider_red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSlider_blue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSlider_green, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(78, 78, 78)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jCheckBox_blue)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(red_input, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(change_R))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(76, 76, 76)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jCheckBox_Green)
                                                    .addComponent(blue_input, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Change_b)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 367, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(dioD1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(Verticall_B1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(diof2)
                                                .addGap(8, 8, 8)
                                                .addComponent(Horizontal_B)))))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Max)
                                    .addComponent(Mid_M)
                                    .addComponent(Min))
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(swapBackground_d)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_browse)
                            .addComponent(jTextField_path, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReSet_B))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox_red)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_image, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jSlider_red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(red_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(change_R))
                                        .addGap(8, 8, 8)
                                        .addComponent(jCheckBox_blue)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSlider_blue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(blue_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Change_b))
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox_Green)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSlider_green, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(green_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Change_g)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ScaleDown_B1)
                                        .addComponent(ScaleUp_B)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(scaling, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(149, 149, 149)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(EdgeDetectMovie)
                                    .addComponent(sunset))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RightToBotLeft)
                                    .addComponent(TickerTapeMov))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(moveRectSinCos)
                                    .addComponent(SwapBackMovie))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CropMovie))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rotate180_B)
                            .addComponent(Verticall_B1)
                            .addComponent(dioD1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RotateLeft90_B1)
                            .addComponent(Horizontal_B)
                            .addComponent(diof2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RotateRight90_B)
                        .addGap(67, 67, 67)
                        .addComponent(jButton2)
                        .addGap(21, 21, 21)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(collage_B)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Binary_B)
                        .addGap(18, 18, 18)
                        .addComponent(edge_E)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edgethreshhold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(brig)
                        .addGap(12, 12, 12)
                        .addComponent(bri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Blend_B)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(swapBackground_d)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Max)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mid_M)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Min)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static Picture icon, AW;
    static String fileName;
    private void jButton_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_browseActionPerformed
        try {

//            fileName = file.getAbsolutePath();
            fileName = FileChooser.pickAFile();
            icon = new Picture(fileName);
            jTextField_path.setText(fileName);
            Pixel[] pixleArray = icon.getPixels();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
            AW = new Picture(fileName);
        } catch (NullPointerException x) {

        }


    }//GEN-LAST:event_jButton_browseActionPerformed

    private void jCheckBox_redActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_redActionPerformed

    }//GEN-LAST:event_jCheckBox_redActionPerformed

    private void jSlider_blueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_blueStateChanged

        if (jCheckBox_blue.isSelected() == true) {
            icon.bsB(jSlider_blue.getValue());
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));

        }
    }//GEN-LAST:event_jSlider_blueStateChanged

    private void jSlider_redStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_redStateChanged
        if (jCheckBox_red.isSelected() == true) {
            red_input.isEnabled();
            int value = Integer.parseInt(red_input.getText());
            icon.bsR(value);
            icon.bsR(jSlider_red.getValue());
            jLabel_image.setDisplayedMnemonic(jSlider_red.getValue());
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));

        }
    }//GEN-LAST:event_jSlider_redStateChanged

    private void jCheckBox_blueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_blueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_blueActionPerformed

    private void jSlider_greenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_greenStateChanged
        if (jCheckBox_Green.isSelected() == true) {
            icon.bsG(jSlider_green.getValue());
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));

        }
    }//GEN-LAST:event_jSlider_greenStateChanged

    private void jCheckBox_GreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_GreenActionPerformed

    }//GEN-LAST:event_jCheckBox_GreenActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        icon.grayscale();
        jLabel_image.setIcon(new ImageIcon(icon.getImage()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Rotate180_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rotate180_BActionPerformed
        icon.rotate180();
        jLabel_image.setIcon(new ImageIcon(icon.getImage()));
    }//GEN-LAST:event_Rotate180_BActionPerformed

    private void RotateRight90_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotateRight90_BActionPerformed
        try {
            icon = icon.rotateRight();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_RotateRight90_BActionPerformed

    private void ScaleUp_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScaleUp_BActionPerformed
        try {
            icon = icon.scaleUp(2);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
    }//GEN-LAST:event_ScaleUp_BActionPerformed
         catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }
    private void RotateLeft90_B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotateLeft90_B1ActionPerformed
        try {
            icon = icon.rotateLeft();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_RotateLeft90_B1ActionPerformed

    private void ScaleDown_B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScaleDown_B1ActionPerformed
        try {
            icon = icon.scaleDown(2);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_ScaleDown_B1ActionPerformed

    private void Horizontal_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Horizontal_BActionPerformed
        try {
            icon = icon.flip();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Horizontal_BActionPerformed

    private void Verticall_B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Verticall_B1ActionPerformed
        try {
            icon = icon.flipVertical();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Verticall_B1ActionPerformed

    private void ReSet_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReSet_BActionPerformed
        try {
            icon = AW;
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_ReSet_BActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            icon.copyKatie();
            icon.show();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void collage_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collage_BActionPerformed
        try {
            icon = icon.collage();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_collage_BActionPerformed

    private void Binary_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Binary_BActionPerformed
        try {
            icon.convert2Binary(100.0);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Binary_BActionPerformed

    private void Blend_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Blend_BActionPerformed
        try {
            icon.overlapPictures(icon, 50);

            jLabel_image.setIcon(new ImageIcon(icon.getImage()));

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Blend_BActionPerformed

    private void removeRedEyeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRedEyeActionPerformed
        try {
//            edgethreshhold.isEnabled();
//            double value = Integer.parseInt(edgethreshhold.getText());
            sX.isEditable();
            eX.isEditable();
            sY.isEditable();
            eY.isEditable();
            int sx = Integer.parseInt(sX.getText());
            int ex = Integer.parseInt(eX.getText());
            int sy = Integer.parseInt(sY.getText());
            int ey = Integer.parseInt(eY.getText());
            icon.removeRedEye(sx, sy, ex, ey, Color.BLUE);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_removeRedEyeActionPerformed

    private void MinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinActionPerformed
        try {
            icon.MinFilter(icon);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_MinActionPerformed

    private void MaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxActionPerformed
        try {
            icon.MaxFilter(icon);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_MaxActionPerformed

    private void Mid_MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mid_MActionPerformed
        try {
            icon.MedianFilter(icon);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Mid_MActionPerformed

    private void edge_EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edge_EActionPerformed
        try {
            edgethreshhold.isEnabled();
            double value = Integer.parseInt(edgethreshhold.getText());
            icon.edgeDetection(value);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_edge_EActionPerformed

    private void edgethreshholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgethreshholdActionPerformed

    }//GEN-LAST:event_edgethreshholdActionPerformed

    private void red_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_red_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_red_inputActionPerformed

    private void change_RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_RActionPerformed
        try {
            red_input.isEnabled();
            int value = Integer.parseInt(red_input.getText());
            icon.bsR(value);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_change_RActionPerformed

    private void Change_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_bActionPerformed
        try {
            blue_input.isEnabled();
            int value = Integer.parseInt(blue_input.getText());
            icon.bsB(value);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Change_bActionPerformed

    private void Change_gActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_gActionPerformed
        try {
            green_input.isEnabled();
            int value = Integer.parseInt(green_input.getText());
            icon.bsG(value);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_Change_gActionPerformed

    private void dioD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dioD1ActionPerformed

        try {
            icon.mirrorDiagTopLeftBotRight();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_dioD1ActionPerformed

    private void diof2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diof2ActionPerformed
        // mirrorDiagTopRightBotLeft
        try {
            icon.mirrorDiagTopRightBotLeft();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }

    }//GEN-LAST:event_diof2ActionPerformed

    private void brigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brigActionPerformed
        // lighten
        try {
            bri.isEnabled();
            double value = Integer.parseInt(bri.getText());
            icon.lighten();
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_brigActionPerformed

    private void briActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_briActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_briActionPerformed

    private void RightToBotLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightToBotLeftActionPerformed
        MovieMaker movieMaker = new MovieMaker();
        String dir = "c:/intro-prog-java/movies/rectangle/";
    movieMaker.makeRectangleMovie(dir);    }//GEN-LAST:event_RightToBotLeftActionPerformed

    private void EdgeDetectMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdgeDetectMovieActionPerformed

        MovieMaker movieMaker = new MovieMaker();
        String dir = "c:/intro-prog-java/movies/edge/";
        Picture p = new Picture(FileChooser.pickAFile());
        movieMaker.makeEdgeDetectMovie(p, dir);
    }//GEN-LAST:event_EdgeDetectMovieActionPerformed

    private void sunsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sunsetActionPerformed
        MovieMaker movieMaker = new MovieMaker();
        String dir = "c:/intro-prog-java/movies/edge/";
        movieMaker.makeSunsetMovie(dir);
    }//GEN-LAST:event_sunsetActionPerformed

    private void swapBackground_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapBackground_dActionPerformed

        try {
            Picture old = new Picture(FileChooser.pickAFile());
            Picture newba = new Picture(FileChooser.pickAFile());
            icon.swapBackground(old, newba);
            jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please Choos A Photo To Make The Chosen Prosses...");
        }
    }//GEN-LAST:event_swapBackground_dActionPerformed

    private void moveRectSinCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveRectSinCosActionPerformed
        MovieMaker movieMaker = new MovieMaker();
        String dir = "c:/intro-prog-java/movies/edge/";
        movieMaker.makeRectMovieMoveSinCon(dir);
    }//GEN-LAST:event_moveRectSinCosActionPerformed

    private void TickerTapeMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TickerTapeMovActionPerformed
        MovieMaker movieMaker = new MovieMaker();
        String dir = "c:/intro-prog-java/movies/edge/";
        movieMaker.makeTickerTapeMovie(dir, "THIS IS A TEST");
    }//GEN-LAST:event_TickerTapeMovActionPerformed

    private void SwapBackMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwapBackMovieActionPerformed
        MovieMaker movieMaker = new MovieMaker();
        String dir = "c:/intro-prog-java/movies/edge/";
        movieMaker.makeFadeOutMovie(dir);
    
    }//GEN-LAST:event_SwapBackMovieActionPerformed

    private void CropMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CropMovieActionPerformed
         MovieMaker movieMaker = new MovieMaker();
        String file = "c:/intro-prog-java/movies/rectangle/";
        movieMaker.moveMarksHead(file);
    }//GEN-LAST:event_CropMovieActionPerformed

    private void scalingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_scalingStateChanged
       icon.scale(scaling.getValue());
        jLabel_image.setIcon(new ImageIcon(icon.getImage()));
        
    }//GEN-LAST:event_scalingStateChanged

//    public Pixel[] getPixels()
// {
//   int width = getWidth();
//   int height = getHeight();
//   Pixel[] pixelArray = new Pixel[width * height];
//   
//   // loop through height rows from top to bottom
//   for (int row = 0; row < height; row++) 
//     for (int col = 0; col < width; col++) 
//       pixelArray[row * width + col] = new Pixel(this,col,row);
//    
//   return pixelArray;
// }
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(color_int.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(color_int.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(color_int.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(color_int.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new color_int().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Binary_B;
    private javax.swing.JButton Blend_B;
    private javax.swing.JButton Change_b;
    private javax.swing.JButton Change_g;
    private javax.swing.JButton CropMovie;
    private javax.swing.JButton EdgeDetectMovie;
    private javax.swing.JButton Horizontal_B;
    private javax.swing.JButton Max;
    private javax.swing.JButton Mid_M;
    private javax.swing.JButton Min;
    private javax.swing.JButton ReSet_B;
    private javax.swing.JButton RightToBotLeft;
    private javax.swing.JButton Rotate180_B;
    private javax.swing.JButton RotateLeft90_B1;
    private javax.swing.JButton RotateRight90_B;
    private javax.swing.JButton ScaleDown_B1;
    private javax.swing.JButton ScaleUp_B;
    private javax.swing.JButton SwapBackMovie;
    private javax.swing.JButton TickerTapeMov;
    private javax.swing.JButton Verticall_B1;
    private javax.swing.JTextField blue_input;
    private javax.swing.JTextField bri;
    private javax.swing.JButton brig;
    private javax.swing.JButton change_R;
    private javax.swing.JButton collage_B;
    private javax.swing.JButton dioD1;
    private javax.swing.JButton diof2;
    private javax.swing.JTextField eX;
    private javax.swing.JTextField eY;
    private javax.swing.JButton edge_E;
    private javax.swing.JTextField edgethreshhold;
    private javax.swing.JTextField green_input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_browse;
    private javax.swing.JCheckBox jCheckBox_Green;
    private javax.swing.JCheckBox jCheckBox_blue;
    private javax.swing.JCheckBox jCheckBox_red;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_image;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider_blue;
    private javax.swing.JSlider jSlider_green;
    private javax.swing.JSlider jSlider_red;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField_path;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToggleButton moveRectSinCos;
    private javax.swing.JTextField red_input;
    private javax.swing.JButton removeRedEye;
    private javax.swing.JTextField sX;
    private javax.swing.JTextField sY;
    private javax.swing.JSlider scaling;
    private javax.swing.JButton sunset;
    private javax.swing.JButton swapBackground_d;
    // End of variables declaration//GEN-END:variables

    @Override
        public String getFileName() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public Image getImage() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public BufferedImage getBufferedImage() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public int getBasicPixel(int x, int y) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public void setBasicPixel(int x, int y, int rgb) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public Pixel getPixel(int x, int y) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public void load(Image image) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
        public boolean load(String fileName) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
